{"version":3,"sources":["components/Employee.jsx","components/NewEmployeeForm.jsx","components/EditEmployeeForm.jsx","components/EmployeeContainer.jsx","App.js","serviceWorker.js","index.js"],"names":["Employee","emp","onRemoveEmployee","f","editingEmployee","key","id","first_name","last_name","employee_id","email_address","phone_number","onClick","NewEmployeeForm","firstName","lastName","employeeId","emailAddress","phoneNumber","onNewEmployee","onSubmit","e","preventDefault","value","focus","ref","input","type","placeholder","required","EditEmployeeForm","props","state","emailAddres","handleChange","bind","handleSubmit","this","setState","target","name","editEmployee","onChange","Component","EmployeeContainer","employees","editingEmployeeID","addNewEmployee","removeEmployee","axios","get","then","res","data","catch","err","console","log","post","employee","delete","filter","put","className","map","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0614a87d.chunk.js","sourcesContent":["import React from 'react';\n\nconst Employee = ({emp, onRemoveEmployee = f => f, editingEmployee = f => f}) =>\n\t\t<tr key={emp.id}>\n\t\t\t<td>{emp.first_name}</td>\n\t\t\t<td>{emp.last_name}</td>\n\t\t\t<td>{emp.employee_id}</td>\n\t\t\t<td>{emp.email_address}</td>\n\t\t\t<td>{emp.phone_number}</td>\n\t\t\t<td><button onClick={() => onRemoveEmployee(emp.id)}>delete employee</button> </td>\n\t\t\t<td><button onClick={() => editingEmployee(emp.id)}>edit</button></td>\n\t\t</tr>\n\nexport default Employee;","import React from 'react'\n\nconst NewEmployeeForm = ({onNewEmployee = f => f}) => {\n\tlet firstName, lastName, employeeId, emailAddress, phoneNumber\n\n\tconst submit = e => {\n\t\te.preventDefault()\n\t\tonNewEmployee(firstName.value, \n\t\t\tlastName.value, \n\t\t\temployeeId.value, \n\t\t\temailAddress.value, \n\t\t\tphoneNumber.value)\n\n\t\t\tfirstName.value = ''\n\t\t\tlastName.value = ''\n\t\t\temployeeId.value = 0\n\t\t\temailAddress.value = ''\n\t\t\tphoneNumber.value = ''\n\n\t\t\tfirstName.focus()\n\t}\n\n\treturn (\n\t\t<form onSubmit={submit}>\n\t\t\t<input ref={input => firstName = input}\n\t\t\t\ttype='text'\n\t\t\t\tplaceholder='first name'\n\t\t\t\trequired/>\n\t\t\t<input ref={input => lastName = input}\n\t\t\t\ttype='text'\n\t\t\t\tplaceholder='last name'\n\t\t\t\trequired/>\n\t\t\t<input ref={input => employeeId = input}\n\t\t\t\ttype='number'\n\t\t\t\tplaceholder='employee id'\n\t\t\t\trequired/>\n\t\t\t<input ref={input => emailAddress = input}\n\t\t\t\ttype='text'\n\t\t\t\tplaceholder='email address'\n\t\t\t\trequired/>\n\t\t\t<input ref={input => phoneNumber = input}\n\t\t\t\ttype='text'\n\t\t\t\tplaceholder='phone number'\n\t\t\t\trequired/>\n\t\t\t<button>add new employee</button>\n\t\t</form>\n\t)\n}\n\nexport default NewEmployeeForm","import React, { Component } from 'react'\n\nclass EditEmployeeForm extends Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tid: this.props.emp.id,\n\t\t\tfirstName: this.props.emp.first_name,\n\t\t\tlastName: this.props.emp.last_name,\n\t\t\temployeeId: this.props.emp.employee_id,\n\t\t\temailAddres: this.props.emp.email_address,\n\t\t\tphoneNumber: this.props.emp.phone_number\n\t\t}\n\n\t\tthis.handleChange = this.handleChange.bind(this)\n\t\tthis.handleSubmit = this.handleSubmit.bind(this)\n\t}\n\n\thandleChange(e) {\n\t\tthis.setState({ [e.target.name]: e.target.value })\n\t}\n\n\thandleSubmit(e) {\n\t\te.preventDefault()\n\t\tconst { id, firstName, lastName,\n\t\t\temployeeId, emailAddres, phoneNumber } = this.state\n\t\t\n\t\tthis.props.editEmployee(id, firstName, lastName,\n\t\t\temployeeId, emailAddres, phoneNumber)\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<form key={this.state.id} onSubmit={this.handleSubmit}>\n\t\t\t\t<input\n\t\t\t\t\tname='firstName'\n\t\t\t\t\ttype='text'\n\t\t\t\t\tplaceholder='first name'\n\t\t\t\t\tvalue={this.state.firstName}\n\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t/>\n\t\t\t\t<input\n\t\t\t\t\tname='lastName'\n\t\t\t\t\ttype='text'\n\t\t\t\t\tplaceholder='last name'\n\t\t\t\t\tvalue={this.state.lastName}\n\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\trequired />\n\t\t\t\t<input\n\t\t\t\t\tname='employeeId'\n\t\t\t\t\ttype='number'\n\t\t\t\t\tplaceholder='employee id'\n\t\t\t\t\tvalue={this.state.employeeId}\n\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\trequired />\n\t\t\t\t<input\n\t\t\t\t\tname='emailAddress'\n\t\t\t\t\ttype='text'\n\t\t\t\t\tplaceholder='email address'\n\t\t\t\t\tvalue={this.state.emailAddres}\n\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\trequired />\n\t\t\t\t<input\n\t\t\t\t\tname='phoneNumber'\n\t\t\t\t\ttype='text'\n\t\t\t\t\tplaceholder='phone number'\n\t\t\t\t\tvalue={this.state.phoneNumber}\n\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\trequired />\n\t\t\t\t<button>edit employee</button>\n\t\t\t</form>\n\t\t)\n\t}\n}\n\nexport default EditEmployeeForm","import React, { Component } from 'react'\nimport axios from 'axios'\n\nimport Employee from './Employee'\nimport NewEmployeeForm from './NewEmployeeForm'\nimport EditEmployeeForm from './EditEmployeeForm';\n\nclass EmployeeContainer extends Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\temployees: [],\n\t\t\teditingEmployeeID: null, \n\t\t\teditingEmployee: null\n\t\t}\n\n\t\tthis.addNewEmployee = this.addNewEmployee.bind(this)\n\t\tthis.removeEmployee = this.removeEmployee.bind(this)\n\t\tthis.editEmployee = this.editEmployee.bind(this)\n\t\tthis.editingEmployee = this.editingEmployee.bind(this)\n\t}\n\n\tcomponentDidMount() {\n\t\taxios.get('/api/v1/employees.json')\n\t\t\t.then(res => {\n\t\t\t\tthis.setState({\n\t\t\t\t\temployees: res.data\n\t\t\t\t})\n\t\t\t})\n\t\t\t.catch(err => console.log(err))\n\t}\n\n\taddNewEmployee(first_name, last_name, employee_id, email_address, phone_number) {\n\t\taxios.post('/api/v1/employees',\n\t\t\t{\n\t\t\t\temployee:\n\t\t\t\t{\n\t\t\t\t\tfirst_name,\n\t\t\t\t\tlast_name,\n\t\t\t\t\temployee_id,\n\t\t\t\t\temail_address,\n\t\t\t\t\tphone_number\n\t\t\t\t}\n\t\t\t})\n\t\t\t.then(res => {\n\t\t\t\tconst employees = [...this.state.employees, res.data]\n\t\t\t\tthis.setState({ employees })\n\t\t\t})\n\t\t\t.catch(err => console.log(err))\n\t}\n\n\tremoveEmployee(id) {\n\t\taxios.delete(`/api/v1/employees/${id}`)\n\t\t\t.then(res => {\n\t\t\t\tconst employees = this.state.employees.filter(\n\t\t\t\t\temp => emp.id !== id\n\t\t\t\t)\n\t\t\t\tthis.setState({ employees })\n\t\t\t})\n\t\t\t.catch(err => console.log(err))\n\t}\n\n\teditingEmployee(id) {\n\t\tconst employee = this.state.employees.filter(emp => {\n\t\t\treturn emp.id === id;\n\t\t})\n\t\tthis.setState({\n\t\t\teditingEmployeeID: id, \n\t\t\teditingEmployee: employee[0]\n\t\t})\n\t}\n\n\teditEmployee(id, first_name, last_name, employee_id, email_address, phone_number) {\n\t\taxios.put(`/api/v1/employees/${id}`, {\n\t\t\temployee:\n\t\t\t{\n\t\t\t\tfirst_name,\n\t\t\t\tlast_name,\n\t\t\t\temployee_id,\n\t\t\t\temail_address,\n\t\t\t\tphone_number\n\t\t\t}\n\t\t})\n\t\t\t.then(res => {\n\t\t\t\tconst employees = this.state.employees\n\t\t\t\temployees[id - 1] = { id, first_name, last_name, employee_id, email_address, phone_number }\n\t\t\t\tthis.setState({\n\t\t\t\t\temployees,\n\t\t\t\t\teditingEmployeeID: null\n\t\t\t\t})\n\t\t\t})\n\t\t\t.catch(err => console.log(err))\n\t}\n\n\trender() {\n\t\tconsole.log(this.state)\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div className='App-header'></div>\n\t\t\t\t<div className='employee-form'>\n\t\t\t\t{this.state.editingEmployeeID === null ? \n    <NewEmployeeForm onNewEmployee={this.addNewEmployee} /> \n   :\n    <EditEmployeeForm className='employee-name'\n    key={this.state.editingEmployeeID}\n    emp={this.state.editingEmployee}\n    onRemoveEmployee={this.removeEmployee}\n    editEmployee={this.editEmployee} />\n}\n\t\t\t\t</div>\n\t\t\t\t<table className='employee-table'>\n\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<th>Fist Name</th>\n\t\t\t\t\t\t\t\t<th>Last Name</th>\n\t\t\t\t\t\t\t\t<th>Employee ID</th>\n\t\t\t\t\t\t\t\t<th>Email</th>\n\t\t\t\t\t\t\t\t<th>Phone Number</th>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t{this.state.employees.map(emp => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<Employee className='employee-name'\n\t\t\t\t\t\t\t\t\t\tkey={emp.id}\n\t\t\t\t\t\t\t\t\t\temp={emp}\n\t\t\t\t\t\t\t\t\t\tonRemoveEmployee={this.removeEmployee}\n\t\t\t\t\t\t\t\t\t\teditingEmployee={this.editingEmployee} />\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</tbody>\n\t\t\t\t</table>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default EmployeeContainer","import React from 'react';\nimport './App.scss';\nimport EmployeeContainer from './components/EmployeeContainer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <EmployeeContainer />\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}